#! /usr/bin/env ruby

require 'json'

def main
  dry = false
  ARGV.each do |arg|
    puts arg
  end
  puts ARGV[0]
  if ARGV[0] =~ /dry(-?run)?/
    dry = true
  end
  dist = `lsb_release -cs`.strip
  sources = JSON.parse(File.read(File.join(top, 'ubuntu.json')))
  puts sources.length

  sources.select! do |src|
    !src.has_key?('dist') or src['dist'].include?(dist)
  end
  successes = sources.select do |src|
    puts "-------------------\nAdding #{src['alias']}\n"
    key_imported = add_key(src, dry)
    key_imported && add_source(src, dry)
  end

  puts "sources.length = #{sources.length}; successes.length = #{successes.length}"
  sources.length == successes.length
end

def top
  @top ||= `git rev-parse --show-toplevel`.strip
end

def add_key(src, dry)
  sourceline = src['sourceline'].untaint
  return true if sourceline.start_with?('ppa:')
 
  keyfile = "#{top}/keys/#{src['alias'].untaint}.asc"
  success = false
  if dry
    puts "Would have imported #{keyfile}"
    success = true
  else 
    cmd = "#{sudo} apt-key add - <#{keyfile}"
    puts "Executing #{cmd}"
    success = system(cmd)
  end
  success
end

def add_source(src, dry)
  success = false
  url = src['sourceline']
  cmd = "#{sudo} apt-add-repository -y #{url}"
  if dry
    puts "Would have executed #{cmd}"
    success = true
  else
    puts "Executing: #{cmd}"
    success = system(cmd)
  end
  success
end

def sudo
  "sudo -E" if Process.uid != 0
end

exit main if $PROGRAM_NAME == __FILE__
